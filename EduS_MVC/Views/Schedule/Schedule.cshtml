@model EduS_MVC.Models.ScheduleModel

@{
    EduS_MVC.Controllers.FacultyController fc = new EduS_MVC.Controllers.FacultyController();
    var faculties = fc.GetFacultiesList();
}

<table>
    <tr>
        <th>@Html.LabelFor(m => m.Schedule)</th>
    </tr>
    <tr>
        @if (Model.Schedule.Count > 0)
        {
            <td>
                @Html.LabelFor(m => m.Schedule[0].Name)
            </td>
            <td>
                @Html.LabelFor(m => m.Schedule[0].Description)
            </td>
            <td>
                @Html.LabelFor(m => m.Schedule[0].StartDate)
            </td>
            <td>
                @Html.LabelFor(m => m.Schedule[0].EndDate)
            </td>
            <td>
                @Html.LabelFor(m => m.Schedule[0].FacultyId)
            </td>
            <td>
                @Html.LabelFor(m => m.Schedule[0].Capacity)
            </td>
            
        }
    </tr>

    @if (Roles.IsUserInRole("student"))
    {
        for (int i = 0; i < Model.Schedule.Count; i++)
        {
            if (Model.Schedule[i].IsUserInFaculty(WebSecurity.CurrentUserId))
            { 
                <tr>
                    <td>
                        @Html.DisplayFor(m => m.Schedule[i].Name)
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.Schedule[i].Description)
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.Schedule[i].StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.Schedule[i].EndDate)
                    </td>
                    @*<td>
                        @Html.DisplayFor(m => m.Schedule[i].FacultyId)
                    </td>*@
                    <td>
                        @Html.DisplayName(faculties[Model.Schedule[i].FacultyId - 1].Text)
                    </td>
                    <td>
                        @Html.DisplayFor(m => m.Schedule[i].Capacity)
                    </td>
                   
                    <td>
                        @Html.ActionLink("Select schedule", "SelectSchedule", new { userId = WebSecurity.CurrentUserId, scheduleId = Model.Schedule[i].Id })
                        @Html.ActionLink("Show schedule", "SpecificSchedule", new { scheduleId = Model.Schedule[i].Id })
                    </td>
                </tr>
            }
        }
    }
    else
    {
        for (int i = 0; i < Model.Schedule.Count; i++)
        {
            <tr>
                <td>
                    @Html.DisplayFor(m => m.Schedule[i].Name)
                </td>
                <td>
                    @Html.DisplayFor(m => m.Schedule[i].Description)
                </td>
                <td>
                    @Html.DisplayFor(m => m.Schedule[i].StartDate)
                </td>
                <td>
                    @Html.DisplayFor(m => m.Schedule[i].EndDate)
                </td>
                @*<td>
                        @Html.DisplayFor(m => m.Schedule[i].FacultyId)
                    </td>*@
                <td>
                    @Html.DisplayName(faculties[Model.Schedule[i].FacultyId - 1].Text)
                </td>
                <td>
                    @Html.DisplayFor(m => m.Schedule[i].Capacity)
                </td>
                @if (Roles.IsUserInRole("admin"))
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = Model.Schedule[i].Id })
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "Delete", new { id = Model.Schedule[i].Id })
                    </td>
                    <td>
                        @Html.ActionLink("EditSubject", "EditSubject", new { id = Model.Schedule[i].Id })
                    </td>
                }
            </tr>
        }
    }

</table>

@if (Roles.IsUserInRole("admin"))
{
    <p>
        @Html.ActionLink("Create New", "Create", "Schedule")
    </p>
}


